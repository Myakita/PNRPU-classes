// Метод Слияния.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
using namespace std;

void Merge(int* A, int f, int l) 
{
    int mid, st, fin, j;
    int* mas = new int[100];
    mid = (f + l) / 2;
    st = f;
    fin = mid + 1;
    for (j = f; j <= l; j++)
    {
        if ((st <= mid) && ((fin > l) || (A[st] < A[fin])))
        {
            mas[j] = A[st]; 
            st++;
        }
        else
        {
            mas[j] = A[fin];
            fin++;
        }
    }
    for (j = f; j <= l; j++)
    {
        A[j] = mas[j];
    }
    delete[] mas;
}
void Sort(int* A, int f, int l) 
{
    if (f < l)
    {
        Sort(A, f, (f + l) / 2);
        Sort(A, (f + l) / 2 + 1, l);
        Merge(A, f, l);
    }
}

int main()
{
    setlocale(0, "");
    int i, n;
    int* A = new int[100];
    cout << "Размер массива: ";
    cin >> n;
    for (i = 1; i <= n; i++)
    {
        cout << i << " Элемент: ";
        cin >> A[i];
    }
    Sort(A, 1, n);
    cout << "Массив после сортировки: ";
    for (i = 1; i <= n; i++)
    {
        cout << A[i] << " ";
    }
    return 0;
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
