// Быстрая сортировка.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
using namespace std;

void QSortRecur(int* mas, int size) 
{
	int i = 0;
	int j = size - 1;
	int mid = mas[size / 2];
	do
	{
		while (mas[i]<mid)
		{
			i++;
		}
		while (mas[j]>mid)
		{
			j--;
		}
		if (i <= j)
		{
			int tmp = mas[i];
			mas[i] = mas[j];
			mas[j] = tmp;
			i++;
			j--;
		}
	} while (i <= j);
	if (j > 0)
	{
		QSortRecur(mas, j + 1);
	}
	if (i < size)
	{
		QSortRecur(&mas[i], size - i);
	}
}

int main()
{
	setlocale(0, "");
	int i, n;
	int* A = new int[100];
	cout << "Размер массива: ";
	cin >> n;
	for (i = 1; i <= n; i++)
	{
		cout << i << " Элемент: ";
		cin >> A[i];
	}
	QSortRecur(A, n + 1);
	cout << endl << "Массив после сортировки: ";
	for (i = 1; i <= n; i++)
	{
		cout << A[i] << " ";
	}
	return 0;
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
